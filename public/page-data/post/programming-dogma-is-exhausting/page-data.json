{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/post/programming-dogma-is-exhausting",
    "result": {"pageContext":{"id":"Post:ckq14tog08uog0c7238x7n6ol:PUBLISHED","title":"Programming Dogma Is Exhausting","content":"Recently I came across the above tweet by [@bryanl](https://twitter.com/bryanl) which I wholeheartedly agree with. Then it got me thinking about what exhausts me in the space of software engineering: pedantic arguments like the one above from [@jbogard](https://twitter.com/jbogard).\n\nYAML & JSON are data structures. They're inherently flexible. They contain information which inform programs about many things, including infrastructure. To gate-keep \"Infrastructure as code\" in this way is silly to me.\n\nIMO there's no place for that kind of thinking in our line of work -  which to me is the main problem with this mindset: It's alienating, unproductive & exhausting.\n\nLooking briefly at Mr Bogard's tweets I would assume he uses Azure Resource Manager since he tweets about Azure cloud architecture quite a bit. So let's take a look at [Microsoft's Infrastructure as Code](https://docs.microsoft.com/en-us/dotnet/architecture/cloud-native/infrastructure-as-code) document around Azure Resource manager.\n\nIn the above linked document there are references to using JSON, Terraform, and yes, YAML.\n\n> Figure 10-17 shows a YAML snippet that lists the version of Azure CLI and the details of the subscription. Note how Azure CLI commands are included in an inline script.\n\nIt appears Microsoft eludes to YAML being \"Infrastructure as Code\" but what do they know? /s","createdAt":"2021-06-17T16:43:12.26686+00:00","date":"2021-06-17","tags":["programming"],"author":{"name":"JP","picture":{"url":"https://media.graphassets.com/iP3Rb3SSXCyyvmxfFsex"}},"twitterPost":"1405510936740478982","youTubeVideoId":null}},
    "staticQueryHashes": []}